
/*1. You are given a number n, representing the number of rows and columns of a square matrix.
2. You are given n * n numbers, representing elements of 2d array a.
3. You are required to find the saddle point of the matrix which is defined as the value which is smallest in it's row but largest in it's column.

Note - There can be only 1 saddle point or none. Think why?*/








import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        // write your code here
    Scanner scn = new Scanner(System.in);
    
    int n = scn.nextInt();
    
    int[][] arr = new int[n][n];
    
    for (int i = 0; i<arr.length; i++){
        for (int j = 0; j<arr[0].length; j++){
            arr[i][j] = scn.nextInt();
        }
    }
    
    for (int i = 0; i<arr.length; i++){
        int svj = 0;
        for(int j = 1; j<arr.length; j++){
            if(arr[i][j] < arr[i][svj]){
                svj = j;
            }
        }
        
        boolean flag = true;
        for (int k = 0; k<arr.length; k++){
            if(arr[k][svj]>arr[i][svj]){
                flag = false;
                 break;
            }
        }
        
        if(flag == true){
            System.out.println(arr[i][svj]);
            return;
        }
    }
    System.out.println("Invalid input");
    
    
    }
}