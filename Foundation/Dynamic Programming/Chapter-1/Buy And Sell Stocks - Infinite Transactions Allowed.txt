/*1. You are given a number n, representing the number of days.
2. You are given n numbers, where ith number represents price of stock on ith day.
3. You are required to print the maximum profit you can make if you are allowed infinite transactions.
Note - There can be no overlapping transaction. One transaction needs to be closed (a buy followed by a sell) before opening another transaction (another buy)*/













import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        // write your code here
        
        Scanner scn = new Scanner(System.in);
        int n = scn.nextInt();
        
        int[] prices = new int[n];
        
        for (int i = 0; i<n; i++){
            prices[i] = scn.nextInt();
        }
        
        int sd = 0;
        int bd = 0;
        int profit = 0;
        
        
        for (int i = 1; i<prices.length; i++){
            if (prices[i] >= prices[i-1]){
                sd++;
            } else {
                profit += prices[sd] - prices[bd];
                sd = bd = i;
            }
        }
        
        profit += prices[sd] - prices[bd];
        
        System.out.println(profit);
        
        
        
    }

}